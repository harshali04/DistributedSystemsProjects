/* Name: Harshali Mahesh Mugutrao
 * UTA ID: 1001747263
 */

package Server;  //package that contains all files related to Server side processing

/* packages required for GUI and Input Output*/
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import javax.swing.*;

public class ServerWindow {

	private JFrame Server; //variable for GUI Window
    Server server; //Access to our class.

	/* Launch the application.*/
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {                        //To update GUI at the end
			
			public void run() {
				try {
					ServerWindow window = new ServerWindow();        //Create instance of our class to set properties
					window.Server.setVisible(true);                 //User should see the window, hence setVisible property is set to true
				} 
				catch (Exception e) {  
					e.printStackTrace();                           //print any errors
				}
			}
		});
	}

	/* Create the application.*/
	public ServerWindow() {
		initialize();
	}

	/* Initialize the contents of the frame.
	 This is default code generated by using Java Window Application file*/
	
	public void initialize() {
		Server = new JFrame();     
		Server.setTitle("Server Window");
		Server.setBounds(100, 100, 609, 448);                          //sets window size
		Server.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         //To close window after user clicks on the close(i.e. X) sign
		Server.getContentPane().setLayout(null);                       //to set position of window
		
		
		Box box = new Box(BoxLayout.LINE_AXIS);      //new box added to show messages
		box.setForeground(Color.BLACK);             //background color of box
		box.setBackground(Color.WHITE);             // color for text that will be printed
		box.setBounds(0, 181, 132, -181);           // set box boundaries
        Server.getContentPane().add(box, BorderLayout.SOUTH);  //added box component to window
		
		
		JButton btnStartServer = new JButton("Start Server");        //Declared button to start server
		btnStartServer.setFont(new Font("Tahoma", Font.BOLD, 14));   //set button font
		btnStartServer.setBackground(Color.GREEN);                   //set button color
		btnStartServer.setBounds(221, 9, 146, 50);                   //set boundary for button
		Server.getContentPane().add(btnStartServer);
		
		JTextArea textAreaServer = new JTextArea();                //Declared textArea to print messages
		textAreaServer.setEditable(false);                         //editable=false, as we do not allow user to write in text area
		textAreaServer.setWrapStyleWord(true);                     
		textAreaServer.setFont(new Font("Monospaced", Font.PLAIN, 15)); //Font for text area
		textAreaServer.setBackground(Color.WHITE);                      //Background color for text area
		textAreaServer.setBounds(12, 72, 567, 316);                     //set boundary for text area 
		textAreaServer.setRows(17);                                     //set height for text area
		textAreaServer.setLineWrap(true);                               
		Server.getContentPane().add(textAreaServer);                   //add text area to the window
		
		/*Redirected console content to text area for printing
		  https://stackoverflow.com/questions/5107629/how-to-redirect-console-content-to-a-textarea-in-java
		 */
		//PrintStream printStreamServer = new PrintStream(new CustomOutputStream(textAreaServer));
		//System.setOut(printStreamServer); //Standard output stream is reassigned
		//System.setErr(printStreamServer);  //Standard Error output stream is reassigned 
		
		/* On click of button-Start Server, Start Server method of Server class is initiated 
		   https://stackoverflow.com/questions/35094602/java-app-cant-be-closed-even-close-on-exit-tcp-server
		 */
		btnStartServer.addActionListener(new ActionListener() {
	    @Override
	    public void actionPerformed(ActionEvent event) {
	        
	        try {
	                Server s=new Server();  //created instance of Server class 
			        s.startServer();        //Accessing method of Server class for further processing
			      
		  }  
		  catch (Exception e) {
			
			e.printStackTrace();
		  }
	    }
	});
		
     }


}
